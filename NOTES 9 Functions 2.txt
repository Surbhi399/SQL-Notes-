substr(): To fetch part of String value

INSTR():It detects the first occurence of a string / a character in the other string

WAQ to display the position of the character 'a' in the string 'Ayush'
SELECT INSTR('Ayush','u')
FROM Dual

SELECT INSTR('Ayush','a')
FROM Dual                  ---//o/p 0

SELECT INSTR('BANANA','A',1,3)
FROM dual
NOTE: By default, optional parameter  of starting point is 1 and no of occurence 
is also 1.

---------------------------------------------------
WAQ to obtain name of the all employees whose 3rd character in last_name is 'r'
.Min 3 ways of query.(either the operations or functions)
---------------------------------------------------------
SELECT last_name
From EMployees
Where Last_name Like '__r%'

(or)

SELECT last_name
From Employees
Where substr(last_name,3,1)='r'

(or)
--- last 3rd char in last name is r then print names
SELECT last_name
From Employees
Where substr(last_name,-3,1)='r'


WAQ to display first_half of the first_name in UPPERCASE and rest in LOWERCASE

Example: SURBHI 
         SURbhi

--Surbhi
SELECT  Upper('Surbhi')
FROM Dual

SELECT  Lower('Surbhi')
FROM Dual

SELECT length('Surbhi')
From Dual

SELECT length('Surbhi')/2
From Dual

          
---------------------------------------

SELECT UPPER(substr(first_name,1,length(first_name)/2))
||
LOWER(substr(first_name,(length(first_name)/2)+1,length(first_name))) AS Display
From Employees

----concat()---


---------------------------------------------------------
replace()

replace()
It  used to replace  a substring in string with a given string

NOTE: The 3rd argument is not  mandoatory, if  its not provided the remote string 
then it is replaced by nothing.

SELECT replace('Bangalore','B','M')
From Dual


SELECT replace('Bangalore','b','M')
From Dual


SELECT replace('Bangalore','alore','****')
From Dual

SELECT replace('Bangalore','alore')
FROM dual



REVERSE()
------------

It can accept only one argument
WAQ to display first_name of all the emplomployee in the reverse order.


SELECT reverse(first_name)
FROM EMployees


----------------
TRIM 

It is used to chop the respective character in STRING
beginning char   --Trailing
ending char   --Leading
----------

SELECT TRIM(leading/trailing  String/char  FROM  String)
FROM tablename

SELECT TRIM(leading 'S' From First_name)
FROM EMployees

SELECT TRIM(Trailing 'n' From First_name)
FROM EMployees


WAQ to trim m in th end of string 'madam'
Select TRIM(trailing 'm' FROM 'madam')
FROM dual

Select TRIM(leading 'm' FROM 'madam')
FROM dual


LPAD(): IT is used to padding the left side of a string with a specific set of 
characters. This function is useful for formatting the o/p of a query

Select LPAD('BJSHUB',10,'*')
FROM dual------------------------//****BJSHUB

RPAD():
It is used to padding the right side of a string with a specific set of characters.
This function is useful for formatting the output of a query.]

Select RPAD('BJSHUB',10,'*')
FROM dual------------------------//BJSHUB****


NUMBER fuctions
----------------
1.WAQ to find the power of  5^2
select power(5,2) AS "Power of 5"
from dual;

2.WAQ to find the square root of 4
select sqrt(4)
from dual;

3.WAQ to find the modulus of the number 120 dividing by 2
select mod(120,2)
from dual;


//DATE functions
-------------------
1.
WAQ to display the number of months between the dates 14-nov-2014 and  14-feb-2014

select months_between('14-nov-2014','14-feb-2014')
from dual;

2. WAQ in order to add 9 months for the date 14-feb-2014
Select add_months('14-Feb-2014',9)
from dual;//NOV


Select add_months('14-Feb-2014',-9)
from dual;//MAY

-----------------------------------------------------

It takes multiple records as input and provides one output for all records.
It is used in SELECT clause.

count()
MIN()
MAX()
SUM() etc.,


WAQ to find count of first_NAmes from EMployees
SELECT count(FIRST_NAME)
FROM EMPLOYEES

SELECT count(*)
From Employees

WAQ to find sum of salary
SELECT SUM(salary)
From EMployees

WAQ to to fetch the first 50% records(rows) from a table
SELECT *
FROM EMployees
WHERE employee_id<=(SELECT count(*)/2 FROM Employees)

Assignment:

Waq to obtain number of employees and total salary of all employees working for department id 20.
select  count(employee_id),sum(salary) from employees where DEPARTMENT_ID = '20';

WAQ to display half number of employees working in a company.

select * from employees where  employee_id <=  (select count(employee_id) /2 from employees); 

Waq to get minimum salary from employees
select min(salary) from employees

WAQ to find maximum salary from employees
select max(salary) from employees

Waq to find average of salary from employees
select avg(salary) from employees

Waq to obtain avg salary and avg commission_pct of all the employees.
select avg(salary),avg(avg commission_pct) from employees

waq to fetch sum,max,min,avg of salary in one query
select sum(salary),min(salary),max(salary), avg(salary) from employees

Waq to display no of employees hired before 2010 and after 2011.
SELECT count(*)
FROM employees
WHERE Hire_date <'1-JAN-2010' AND Hire_date >'31-DEC-2011

Waq to display date of first hired employees

SELECT MIN(hire_date)
FROM employees
//VALID


//INVALID
SELECT HIRE_DATE
FROM employees
WHERE min(HIRE_DATE)

Waq nos of employees having A as their first_name.

Write An SQL Query To Show The Last Record From A Table.

SELECT *
FROM Employees
WHERE Employee_Id= (SELECT MAX(Employee_id)
FROM employees)
16.Write An SQL Query To Show The  first Record From A Table.
SELECT *
FROM Employees
WHERE Employee_Id= (SELECT MIN(Employee_id)
FROM employees)











What is a Query?
A query is a request for data or information from a database table or combination of tables. A database query can be either a select query or an action query.

What are UNION, MINUS and INTERSECT commands?
The UNION operator combines and returns the result-set retrieved by two or more SELECT statements.
The MINUS operator in SQL is used to remove duplicates from the result-set obtained by the second SELECT query from the result-set obtained by the first SELECT query and then return the filtered results from the first.
The INTERSECT clause in SQL combines the result-set fetched by the two SELECT statements where records from one match the other and then returns this intersection of result-sets.
(//WILL BE DISCUSSED SOON...)

What is an Alias in SQL?
An alias is a feature of SQL that is supported by most, if not all, RDBMSs. It is a temporary name assigned to the table or table column for the purpose of a particular SQL query. In addition, aliasing can be employed as an obfuscation technique to secure the real names of database fields. A table alias is also called a correlation name.

An alias is represented explicitly by the AS keyword but in some cases, the same can be performed without it as well. Nevertheless, using the AS keyword is always a good practice.


What are the TRUNCATE, DELETE and DROP statements?
DELETE statement is used to delete rows from a table.
TRUNCATE command is used to delete all the rows from the table and free the space containing the table.
DROP command is used to remove an object from the database. If you drop a table, all the rows in the table are deleted and the table structure is removed from the database.

What is the difference between DROP and TRUNCATE statements?
If a table is dropped, all things associated with the tables are dropped as well. This includes - the relationships defined on the table with other tables, the integrity checks and constraints, access privileges and other grants that the table has. To create and use the table again in its original form, all these relations, checks, constraints, privileges and relationships need to be redefined. However, if a table is truncated, none of the above problems exist and the table retains its original structure.


What is Pattern Matching in SQL?
SQL pattern matching provides for pattern search in data if you have no clue as to what that word should be. This kind of SQL query uses wildcards to match a string pattern, rather than writing the exact word. The LIKE operator is used in conjunction with SQL Wildcards to fetch the required information.
Using the % wildcard to perform a simple search
Using the _ wildcard to match pattern at a specific position



















